apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

version = '1.0'
sourceCompatibility = 1.8

mainClassName = "com.github.diegopacheco.sandbox.java.netflixoss.dyno.msa.ServerRunner"
applicationDefaultJvmArgs = [
								 "-Djava.net.preferIPv4Stack=true",
								 "-Djava.net.preferIPv6Addresses=false",
								 "-server",
								 "-Xmx2048m",
								 "-Xms128m"
							]

repositories {
	jcenter()
	mavenLocal()
}

buildscript {
	repositories {
			jcenter()
			mavenLocal()
	}
}

eclipse {
	classpath {
		downloadSources = true
	}
}

dependencies {
	compile([
			  'ch.qos.logback:logback-classic:1.0.13',
			  'org.slf4j:slf4j-log4j12:1.7.12',
			  'org.slf4j:slf4j-jdk14:1.7.12',
			  'com.netflix.karyon:karyon2-core:2.7.2',
			  'com.netflix.karyon:karyon2-jersey-blocking:2.7.2',
			  'com.netflix.karyon:karyon2-archaius:2.7.2',
			  'com.netflix.karyon:karyon2-servo:2.7.2',
			  'com.netflix.karyon:karyon2-admin-web:2.7.2',
			  'com.netflix.karyon:karyon2-eureka:2.7.2',
			  'com.sun.jersey:jersey-client:1.18.4',
		    ])

    compile 'com.netflix.dyno:dyno-core:latest.release'
    compile 'com.netflix.dyno:dyno-jedis:latest.release'
    
    compileOnly([
		  'io.gatling:gatling-core:2.2.5',
		  'io.gatling:gatling-http:2.2.5',
		  'org.scala-lang:scala-reflect:2.12.2',
		  'org.scala-lang:scala-compiler:2.12.2', 
		  'org.scala-lang:scala-library:2.12.2',       
    ])

}

task readStress(type: Exec) { 
   executable "sh"
   args "-c", "$System.env.GATLING_HOME/bin/gatling.sh -m -sf " + new File(".").absolutePath + "/src/main/scala/ --simulation ReadStressTest"
}

task writeStress(type: Exec) { 
   executable "sh"
   args "-c", "$System.env.GATLING_HOME/bin/gatling.sh -m -sf " + new File(".").absolutePath + "/src/main/scala/ --simulation WriteStressTest"
}

